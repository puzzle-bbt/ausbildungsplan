# This is an automaticly generated file. Don't edit this file manually
---
topics:
- title: Applikationsentwicklung
  description: Verstehen und Entwickeln von Server- und Clientseitiger Software.
  year_calendar_weeks:
    2.1.1: 1 33-40
    2.2.1: 1 1-15
    2.3.1: 2 31-5
    2.4.1: 1 47-50
    2.5.1: 1 40-45
    2.6.1: 2 45-5
  id: '2'
- title: UI / Web
  description: Verstehen und Entwickeln von Webseiten
  year_calendar_weeks:
    1.1.1: 1 33-40
    1.1.2: 1 11-20
    1.1.3: 2 40-50
    1.1.4: 2 13-30
    1.2.1: 3 45-4
    1.2.2: 3 6-12
    1.3.1: 4 1-4
    1.3.2: 4 8-22
  id: '1'
competencies:
- title: Multi-Pape Applikation
  description: Verstehen und Umsetzen einer Multi-Pape Applikation
  id: '2.2'
- title: Single-Page-Applikation
  description: Verstehen und Umsetzen einer Single-Page-Applikation
  id: '2.3'
- title: Programmierung
  description: Aufbau und Gestaltung einer statischen Webseite
  id: '2.1'
- title: API
  description: Definieren und Verwenden von Schnittstellen
  id: '2.4'
- title: Konzeption
  description: Erstellen und dokumentieren einer Software Architektur.
  id: '2.6'
- title: Build-Tools + Dependencies
  description: Verwalten der Abhängigkeiten, bauen und deployen von einer Webapplikation
  id: '2.5'
- title: JavaScript in Webseiten
  description: Einsatz von JavaScript in einer statischen Webseite.
  id: '1.2'
- title: User Experience (UX)
  description: Design, Interaktion und Gebrauchstauglichkeit einer Webseite verbessern.
  id: '1.3'
- title: Statische Webseite
  description: Aufbau und Gestaltung einer statischen Webseite
  id: '1.1'
competency_levels:
- goals:
  - Funktionsweise einer Multi-Pape Applikation verstehen.
  - Eine einfache Multi-Pape Applikation ohne DB anwenden und erweitern können.
  instruments:
  - "[SpringBoot oder Ruby on Rails zum Erstellen einer dynamische Webseite.]()"
  - "[Existierende Beispiel Multi-Pape Applikation.]()"
  id: 2.2.1
- goals:
  - Funktionsweise einer Single-Page-Webanwendung verstehen
  instruments:
  - "[Hilfsmittel sind noch zu definieren.]()"
  id: 2.3.1
- goals:
  - Einstieg in die Programmierung mit JavaScript.
  - Kennenlernen von Variablen, Typen, Verzweigungen und Schleifen
  instruments:
  - "[Hilfsmittel sind noch zu definieren.]()"
  id: 2.1.1
- goals:
  - Die Ziele dieses Levels sind noch nicht definiert.
  instruments:
  - "[Hilfsmittel sind noch zu definieren.]()"
  id: 2.4.1
- goals:
  - Die Ziele dieses Levels sind noch nicht definiert.
  instruments:
  - "[Hilfsmittel sind noch zu definieren.]()"
  id: 2.6.1
- goals:
  - Die Ziele dieses Levels sind noch nicht definiert.
  instruments:
  - "[Hilfsmittel sind noch zu definieren.]()"
  id: 2.5.1
- goals:
  - Mit jQuery HTML-Tags in den DOM hinzufügen und bestehende HTML-Tags manipulieren.
  - Daten mit einem Ajax-Request nachladen.
  instruments:
  - "[](https://jquery.com/)"
  id: 1.2.2
- goals:
  - JavaScript direkt in der HTML-Seite.
  - JavaScript in eine separate Datei auslagern.
  - Mit JavaScript einfache click-Handler umsetzen.
  - Ein Formular validieren und absenden.
  - 'Entwickler-Tools: Debuggen im Browser.'
  instruments:
  - "[Hilfsmittel sind noch zu definieren.]()"
  id: 1.2.1
- goals:
  - Responsive First Ansatz
  instruments:
  - "[](https://getbootstrap.com/)"
  id: 1.3.2
- goals:
  - Was bedeutet User Experience (UX)?
  - Design und Layout einer Webseite.
  - Formulare
  instruments:
  - "[Hilfsmittel sind noch zu definieren.]()"
  id: 1.3.1
- goals:
  - Verwendung von HTML-Framework wie Bootstrap anwenden können.
  instruments:
  - "[](https://getbootstrap.com/)"
  id: 1.1.3
- goals:
  - Responsive Webseite verstehen und umsetzen können.
  instruments:
  - "[ÜK 101 - Webauftritt: ](https://cf.ict-berufsbildung.ch/modules.php?name=Mbk&a=20101&cmodnr=101)"
  - "(https://www.w3schools.com/html/html_responsive.asp)"
  id: 1.1.2
- goals:
  - CSS-Preprocessor wie Less, Sass, Scss anwenden können.
  instruments:
  - "[](http://lesscss.org/)"
  - "[](https://sass-lang.com/guide)"
  - "[](https://sass-lang.com/documentation/syntax)"
  id: 1.1.4
- goals:
  - 'HTML: Aufbau einer Webseite verstehen: Tags + Attribute.'
  - 'HTML: Die wichtigsten HTML-Tags kennen.'
  - 'CSS: Funktionsweise von Selektoren und Formatierung verstehen.'
  - 'CSS: Die einfachen Styles anwenden können.'
  - Trennung zwischen HTML und CSS verstehen.
  - Einfache Layouts mit HTML + CSS umsetzen können.
  instruments:
  - "[](https://www.w3schools.com/html)"
  - "[](https://www.w3schools.com/css)"
  - "[](https://www.codecademy.com/catalog/language/html-css)"
  id: 1.1.1
conf:
- semester:
  - start_at_week_nr: 33
    finish_at_week_nr: 4
  - start_at_week_nr: 5
    finish_at_week_nr: 32
